@model Restaurant.DTOs.OrderDTOs.CreateOrderDTO

@{
    ViewData["Title"] = $"Update Order #{Model.Id}";
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .update-container {
        padding: 2rem 1rem;
        min-height: 100vh;
    }

    /* Header */
    .update-header {
        background: white;
        padding: 2rem;
        border-radius: 12px;
        margin-bottom: 2rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header-content h1 {
        color: #2c3e50;
        font-size: 2rem;
        font-weight: 800;
        margin-bottom: 0.5rem;
    }

    .header-content p {
        color: #95a5a6;
        font-size: 0.95rem;
    }

    .order-badge {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 0.8rem 1.5rem;
        border-radius: 8px;
        font-weight: 700;
        font-size: 1.1rem;
    }

    /* Main Form */
    .form-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .form-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .form-header-icon {
        font-size: 2.5rem;
    }

    .form-header h2 {
        font-size: 1.8rem;
        font-weight: 700;
        margin: 0;
    }

    .form-body {
        padding: 2.5rem;
    }

    /* Validation Summary */
    .validation-summary {
        background: linear-gradient(135deg, #fadbd8 0%, #f5b7b1 100%);
        border: 2px solid #e74c3c;
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        color: #c0392b;
    }

        .validation-summary h4 {
            font-weight: 700;
            margin-bottom: 0.8rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .validation-summary ul {
            list-style: none;
            padding-left: 0;
        }

        .validation-summary li {
            padding: 0.4rem 0;
            margin-bottom: 0.3rem;
        }

            .validation-summary li::before {
                content: '❌ ';
                margin-right: 0.5rem;
            }

    /* Form Sections */
    .form-section {
        margin-bottom: 2.5rem;
        padding-bottom: 2.5rem;
        border-bottom: 2px solid #ecf0f1;
    }

        .form-section:last-of-type {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
        }

    .section-title {
        color: #2c3e50;
        font-size: 1.3rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.8rem;
    }

    .section-icon {
        font-size: 1.5rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .section-title::after {
        content: '';
        flex: 1;
        height: 2px;
        background: linear-gradient(90deg, #667eea 0%, transparent 100%);
    }

    /* Form Grid */
    .form-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .form-group {
        display: flex;
        flex-direction: column;
    }

    .form-label {
        color: #2c3e50;
        font-weight: 700;
        font-size: 0.95rem;
        margin-bottom: 0.6rem;
        display: flex;
        align-items: center;
        gap: 0.3rem;
    }

        .form-label .required {
            color: #e74c3c;
        }

    .form-control,
    .form-select {
        background: linear-gradient(135deg, #f8f9fa 0%, #f0f3f7 100%);
        border: 2px solid #ecf0f1;
        border-radius: 8px;
        padding: 0.9rem 1.2rem;
        font-size: 0.95rem;
        color: #2c3e50;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        font-weight: 500;
    }

        .form-control:focus,
        .form-select:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .form-control:disabled {
            background: #ecf0f1;
            color: #95a5a6;
            cursor: not-allowed;
            opacity: 0.7;
        }

        .form-control::placeholder,
        .form-select {
            color: #95a5a6;
        }

    /* Validation Error */
    .invalid-feedback {
        color: #e74c3c;
        font-size: 0.85rem;
        font-weight: 600;
        margin-top: 0.5rem;
        display: block;
    }

    .form-control.is-invalid,
    .form-select.is-invalid {
        border-color: #e74c3c;
        background: linear-gradient(135deg, #fadbd8 0%, #f5b7b1 100%);
    }

    /* Info Box */
    .info-box {
        background: linear-gradient(135deg, #d5f4e6 0%, #c8f0e0 100%);
        border-left: 5px solid #27ae60;
        border-radius: 8px;
        padding: 1.2rem;
        margin-bottom: 2rem;
        color: #27ae60;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .info-box-icon {
        font-size: 1.5rem;
    }

    .info-box p {
        margin: 0;
        font-weight: 500;
    }

    /* Helper Text */
    .helper-text {
        color: #95a5a6;
        font-size: 0.85rem;
        margin-top: 0.4rem;
        font-style: italic;
    }

    /* Buttons */
    .button-group {
        display: flex;
        gap: 1rem;
        margin-top: 2.5rem;
        padding-top: 2rem;
        border-top: 2px solid #ecf0f1;
    }

    .btn {
        padding: 1rem 2rem;
        border: none;
        border-radius: 8px;
        font-weight: 700;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.6rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .btn-submit {
        flex: 1;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    }

        .btn-submit:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.5);
            background: linear-gradient(135deg, #764ba2 0%, #6c40a0 100%);
            color: white;
        }

        .btn-submit:active {
            transform: translateY(-1px);
        }

    .btn-back {
        flex: 1;
        background: white;
        color: #95a5a6;
        border: 2px solid #95a5a6;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

        .btn-back:hover {
            background: #95a5a6;
            color: white;
            border-color: #95a5a6;
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(149, 165, 166, 0.3);
        }

        .btn-back:active {
            transform: translateY(-1px);
        }

    /* Status Badge */
    .status-badge {
        display: inline-block;
        padding: 0.6rem 1.2rem;
        border-radius: 20px;
        font-weight: 700;
        color: white;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.85rem;
        margin-top: 0.5rem;
    }

    .status-pending {
        background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);
    }

    .status-confirmed {
        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
    }

    .status-ready {
        background: linear-gradient(135deg, #9b59b6 0%, #8e44ad 100%);
    }

    .status-delivered {
        background: linear-gradient(135deg, #27ae60 0%, #229954 100%);
    }

    .status-cancelled {
        background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
    }

    /* Responsive */
    @@media (max-width: 1024px) {
        .update-header

    {
        flex-direction: column;
        text-align: center;
        gap: 1rem;
    }

    .form-body {
        padding: 1.5rem;
    }

    }

    @@media (max-width: 768px) {
        .update-container

    {
        padding: 1rem;
    }

    .form-header {
        padding: 1.5rem;
    }

        .form-header h2 {
            font-size: 1.4rem;
        }

    .form-body {
        padding: 1.5rem;
    }

    .button-group {
        flex-direction: column;
        gap: 0.8rem;
    }

    .btn {
        width: 100%;
    }

    .form-grid {
        grid-template-columns: 1fr;
    }

    .section-title {
        font-size: 1.1rem;
    }

    .update-header h1 {
        font-size: 1.5rem;
    }

    }

    @@media (max-width: 480px) {
        .update-header h1

    {
        font-size: 1.2rem;
    }

    .form-header-icon {
        font-size: 2rem;
    }

    .form-header h2 {
        font-size: 1.2rem;
    }

    }
</style>

<div class="update-container">
    <!-- Header -->
    <div class="update-header">
        <div class="header-content">
            <h1>📝 Edit Order</h1>
            <p>Update order details and information</p>
        </div>
        <div class="order-badge">Order #@Model.Id</div>
    </div>

    <!-- Form Card -->
    <div class="form-card">
        <div class="form-header">
            <div class="form-header-icon">✏️</div>
            <h2>Update Order Details</h2>
            <h2>Coustomer: @Model.CustomerUserName</h2>

        </div>

        <div class="form-body">
            <form asp-action="Update" method="post" novalidate>
                <!-- Validation Summary -->
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="validation-summary">
                        <h4>⚠️ Please fix the following errors:</h4>
                        <div asp-validation-summary="ModelOnly"></div>
                    </div>
                }

                <!-- Info Box -->
                <div class="info-box">
                    <div class="info-box-icon">ℹ️</div>
                    <p>Update the order information below. Some fields cannot be changed after creation.</p>
                </div>

                <!-- Section 1: Order Type & Status -->
                <div class="form-section">
                    <div class="section-title">
                        <span class="section-icon">📦</span> Order Information
                    </div>

                    <div class="form-grid">
                        <div class="form-group">
                            <label asp-for="Type" class="form-label">
                                Order Type <span class="required">*</span>
                            </label>
                            <select asp-for="Type" class="form-select"
                                    asp-items="Html.GetEnumSelectList<Restaurant.Models.OrderType>()">
                                <option value="">-- Select Order Type --</option>
                            </select>
                            <span asp-validation-for="Type" class="invalid-feedback"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Status" class="form-label">
                                Status <span class="required">*</span>
                            </label>
                            <select asp-for="Status" class="form-select"
                                    asp-items="Html.GetEnumSelectList<Restaurant.Models.OrderStatus>()">
                                <option value="">-- Select Status --</option>
                            </select>
                            <span asp-validation-for="Status" class="invalid-feedback"></span>
                            @{
                                string statusClass = Model.Status switch
                                {
                                    Restaurant.Models.OrderStatus.Pending => "status-pending",
                                    Restaurant.Models.OrderStatus.Confirmed => "status-confirmed",
                                    Restaurant.Models.OrderStatus.Ready => "status-ready",
                                    Restaurant.Models.OrderStatus.Delivered => "status-delivered",
                                    Restaurant.Models.OrderStatus.Cancelled => "status-cancelled",
                                    _ => "status-pending"
                                };
                            }
                            <span class="status-badge @statusClass">@Model.Status</span>
                        </div>
                    </div>
                </div>

                <!-- Section 2: Delivery Information -->
                <div class="form-section">
                    <div class="section-title">
                        <span class="section-icon">🚚</span> Delivery Information
                    </div>

                    <div class="form-group">
                        <label asp-for="DeliveryAddress" class="form-label">
                            Delivery Address <span class="required">*</span>
                        </label>
                        <input asp-for="DeliveryAddress" class="form-control"
                               placeholder="Enter the complete delivery address..." />
                        <span asp-validation-for="DeliveryAddress" class="invalid-feedback"></span>
                        <span class="helper-text">📍 Make sure the address is complete and accurate</span>
                    </div>
                </div>

                <!-- Section 3: Pricing & Fees -->
                <div class="form-section">
                    <div class="section-title">
                        <span class="section-icon">💰</span> Pricing & Fees
                    </div>

                    <div class="form-grid">
                        <div class="form-group">
                            <label asp-for="TaxPercent" class="form-label">Tax Percentage (%)</label>
                            <input asp-for="TaxPercent" class="form-control"
                                   type="number" step="0.1" min="0" max="100" placeholder="0.0" />
                            <span asp-validation-for="TaxPercent" class="invalid-feedback"></span>
                            <span class="helper-text">💡 Enter tax percentage (e.g., 8.5 for 8.5%)</span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Discount" class="form-label">Discount Amount ($)</label>
                            <input asp-for="Discount" class="form-control"
                                   type="number" step="0.01" min="0" placeholder="0.00" />
                            <span asp-validation-for="Discount" class="invalid-feedback"></span>
                            <span class="helper-text">🎁 Apply discount amount in dollars</span>
                        </div>

                       
                    </div>
                </div>

                <!-- Buttons -->
                <div class="button-group">
                    <button type="submit" class="btn btn-submit">
                        💾 Update Order
                    </button>
                    <a asp-action="Index" class="btn btn-back">
                        ← Back to Orders
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>