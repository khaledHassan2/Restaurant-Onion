@using Restaurant.Models
@model List<Order>

@{
    ViewData["Title"] = "Orders Management";
}

<style>
    :root {
        --primary: #2c3e50;
        --success: #27ae60;
        --danger: #e74c3c;
        --info: #3498db;
        --warning: #f39c12;
        --light: #ecf0f1;
        --dark: #2c3e50;
    }

    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
    }

    .container-fluid {
        padding: 2rem 1rem;
    }

    /* Header */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2.5rem;
        padding: 2rem;
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
    }

        .page-header h1 {
            color: var(--primary);
            font-weight: 800;
            font-size: 2.5rem;
            margin: 0;
            letter-spacing: -0.5px;
        }

    .btn-new-order {
        background: linear-gradient(135deg, var(--success) 0%, #229954 100%);
        color: white;
        border: none;
        padding: 0.9rem 2.2rem;
        border-radius: 8px;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.7rem;
        box-shadow: 0 4px 15px rgba(39, 174, 96, 0.2);
    }

        .btn-new-order:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(39, 174, 96, 0.35);
            background: linear-gradient(135deg, #229954 0%, #1e8449 100%);
            color: white;
        }

        .btn-new-order i {
            font-size: 1.2rem;
        }

    /* Table Container */
    .table-container {
        background: white;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    /* Table Styling */
    .table {
        margin-bottom: 0;
        border-collapse: collapse;
    }

        .table thead {
            background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
            color: white;
        }

            .table thead th {
                border: none;
                padding: 1.3rem 1rem;
                font-weight: 700;
                font-size: 0.95rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
                vertical-align: middle;
            }

        .table tbody tr {
            border-bottom: 1px solid var(--light);
            transition: all 0.3s ease;
        }

            .table tbody tr:hover {
                background: #f8f9fa;
                box-shadow: inset 0 0 10px rgba(39, 174, 96, 0.05);
            }

        .table tbody td {
            padding: 1.2rem 1rem;
            vertical-align: middle;
            color: var(--primary);
            font-size: 0.95rem;
        }

    /* Order ID */
    .order-id {
        font-weight: 800;
        color: var(--danger);
        font-size: 1.1rem;
    }

    /* Customer Name */
    .customer-name {
        font-weight: 600;
        color: var(--primary);
    }

    /* Type Badge */
    .type-badge {
        background: linear-gradient(135deg, var(--info) 0%, #2980b9 100%);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 600;
        display: inline-block;
        box-shadow: 0 2px 8px rgba(52, 152, 219, 0.2);
    }

    /* Status Badges */
    .status-badge {
        padding: 0.55rem 1.1rem;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 700;
        color: white;
        display: inline-block;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }

    .status-pending {
        background: linear-gradient(135deg, var(--warning) 0%, #e67e22 100%);
    }

    .status-ready {
        background: linear-gradient(135deg, var(--info) 0%, #2980b9 100%);
    }

    .status-delivered {
        background: linear-gradient(135deg, var(--success) 0%, #229954 100%);
    }

    .status-cancelled {
        background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
    }

    /* Items Column */
    .items-column {
        text-align: left;
    }

    .items-preview {
        cursor: pointer;
        padding: 0.6rem 0.9rem;
        border-radius: 6px;
        background: linear-gradient(135deg, #e8f5e9 0%, #f1f8f6 100%);
        transition: all 0.3s ease;
        display: inline-block;
        border: 1px solid #c8e6c9;
    }

        .items-preview:hover {
            background: linear-gradient(135deg, #c8e6c9 0%, #d5f0e3 100%);
            border-color: var(--success);
            transform: translateX(4px);
        }

    .items-toggle {
        color: var(--success);
        text-decoration: none;
        font-weight: 700;
        font-size: 0.95rem;
    }

    .items-detail {
        display: none;
        margin-top: 1rem;
        padding: 1.2rem;
        background: linear-gradient(135deg, #f8f9fa 0%, #f0f3f7 100%);
        border-radius: 8px;
        border-left: 4px solid var(--success);
        animation: slideDown 0.3s ease;
    }

        .items-detail.show {
            display: block;
        }

    @@keyframes slideDown {
        from

    {
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .items-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .items-list li {
            padding: 0.6rem 0;
            border-bottom: 1px solid var(--light);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .items-list li:last-child {
                border-bottom: none;
            }

    .item-info {
        flex: 1;
    }

    .item-name {
        font-weight: 700;
        color: var(--primary);
        margin-bottom: 0.3rem;
    }

    .item-qty {
        color: #7f8c8d;
        font-size: 0.85rem;
    }

    .item-total {
        font-weight: 700;
        color: var(--success);
        font-size: 1rem;
    }

    /* Price Cells */
    .price-cell {
        font-weight: 700;
        color: var(--primary);
    }

    .total-cell {
        font-size: 1.2rem;
        font-weight: 800;
        color: var(--success);
        background: linear-gradient(90deg, rgba(39, 174, 96, 0.08) 0%, transparent 100%);
        padding: 1.2rem 1rem !important;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 0.6rem;
        flex-wrap: wrap;
    }

    .btn-action {
        padding: 0.6rem 1rem;
        border-radius: 6px;
        font-weight: 600;
        font-size: 0.85rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
        border: none;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .btn-update {
        background: linear-gradient(135deg, var(--info) 0%, #2980b9 100%);
        color: white;
        box-shadow: 0 2px 8px rgba(52, 152, 219, 0.2);
    }

        .btn-update:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(52, 152, 219, 0.4);
            background: linear-gradient(135deg, #2980b9 0%, #1f618d 100%);
            color: white;
            text-decoration: none;
        }

    .btn-delete {
        background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
        color: white;
        box-shadow: 0 2px 8px rgba(231, 76, 60, 0.2);
    }

        .btn-delete:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(231, 76, 60, 0.4);
            background: linear-gradient(135deg, #c0392b 0%, #a93226 100%);
            color: white;
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
    }

    .empty-state-icon {
        font-size: 5rem;
        color: #bdc3c7;
        margin-bottom: 1.5rem;
    }

    .empty-state h5 {
        color: var(--primary);
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 0.8rem;
    }

    .empty-state p {
        color: #95a5a6;
        font-size: 1rem;
        margin-bottom: 2rem;
    }

    /* Modal */
    .modal-content {
        border: none;
        border-radius: 12px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
        color: white;
        border: none;
        border-radius: 12px 12px 0 0;
        padding: 1.5rem;
    }

    .modal-title {
        font-weight: 700;
        font-size: 1.3rem;
        letter-spacing: 0.5px;
    }

    .btn-close {
        filter: brightness(0) invert(1);
    }

    .modal-body {
        padding: 2rem;
    }

    .order-details-list {
        list-style: none;
        padding: 0;
    }

        .order-details-list li {
            background: linear-gradient(135deg, #f8f9fa 0%, #f0f3f7 100%);
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 0.8rem;
            border-left: 4px solid var(--info);
            display: flex;
            justify-content: space-between;
        }

            .order-details-list li:last-child {
                margin-bottom: 0;
            }

    .modal-footer {
        padding: 1.5rem;
        border-top: 1px solid var(--light);
    }

        .modal-footer .btn {
            border-radius: 6px;
            font-weight: 600;
            padding: 0.65rem 1.5rem;
            letter-spacing: 0.5px;
        }

    .btn-secondary {
        background: #95a5a6;
        border: none;
        color: white;
    }

        .btn-secondary:hover {
            background: #7f8c8d;
            color: white;
        }

    .btn-danger {
        background: linear-gradient(135deg, var(--danger) 0%, #c0392b 100%);
        border: none;
        color: white;
    }

        .btn-danger:hover {
            background: linear-gradient(135deg, #c0392b 0%, #a93226 100%);
            color: white;
        }

    /* Responsive */
    @@media (max-width: 1200px) {
        .page-header

    {
        flex-direction: column;
        gap: 1.5rem;
        align-items: flex-start;
    }

    .btn-new-order {
        width: 100%;
        justify-content: center;
    }

    .table {
        font-size: 0.9rem;
    }

        .table thead th {
            padding: 1rem 0.6rem;
        }

        .table tbody td {
            padding: 1rem 0.6rem;
        }

    }

    @@media (max-width: 768px) {
        .page-header h1

    {
        font-size: 1.8rem;
    }

    .table {
        font-size: 0.8rem;
    }

        .table thead th {
            padding: 0.8rem 0.4rem;
            font-size: 0.75rem;
        }

        .table tbody td {
            padding: 0.8rem 0.4rem;
        }

    .action-buttons {
        flex-direction: column;
        gap: 0.4rem;
    }

    .btn-action {
        width: 100%;
        justify-content: center;
    }

    .order-id {
        font-size: 0.95rem;
    }

    }
</style>

<div class="container-fluid">
    <!-- Header -->
    <div class="page-header">
        <div>
            <h1>📦 Orders Management</h1>
        </div>
    </div>

    <!-- Table Container -->
    <div class="table-container">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Customer</th>
                            <th>Type</th>
                            <th>Status</th>
                            <th>Date</th>
                            <th>Items</th>
                            <th>Subtotal</th>
                            <th>Tax</th>
                            <th>Discount</th>
                            <th>Total</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            var itemCount = order.Items?.Count ?? 0;
                            <tr>
                                <td>
                                    <span class="order-id">#@order.Id</span>
                                </td>
                                <td>
                                    <span class="customer-name">@(order.Customer?.UserName ?? "N/A")</span>
                                </td>
                                <td>
                                    <span class="type-badge">@order.Type</span>
                                </td>
                                <td>
                                    @{
                                        string statusClass = order.Status switch
                                        {
                                            Restaurant.Models.OrderStatus.Pending => "status-pending",
                                            Restaurant.Models.OrderStatus.Confirmed => "status-ready",
                                            Restaurant.Models.OrderStatus.Ready => "status-ready",
                                            Restaurant.Models.OrderStatus.Delivered => "status-delivered",
                                            Restaurant.Models.OrderStatus.Cancelled => "status-cancelled",
                                            _ => "status-pending"
                                        };
                                    }
                                    <span class="status-badge @statusClass">@order.Status</span>
                                </td>
                                <td>@order.LastStatusChange?.ToString("dd/MM/yyyy HH:mm")</td>

                                <!-- Items Column -->
                                <td class="items-column">
                                    @if (itemCount > 0)
                                    {
                                        <div class="items-preview" onclick="toggleItems(event, '@order.Id')">
                                            <span class="items-toggle">📦 @itemCount item(s)</span>
                                        </div>

                                        <div id="items-@order.Id" class="items-detail">
                                            <ul class="items-list">
                                                @foreach (var item in order.Items)
                                                {
                                                    <li>
                                                        <div class="item-info">
                                                            <div class="item-name">@item.MenuItem?.Name</div>
                                                            <div class="item-qty">
                                                                Qty: @item.Quantity × @item.UnitPrice.ToString("C")
                                                            </div>
                                                        </div>
                                                        <div class="item-total">@(item.Quantity* item.UnitPrice).ToString("C")</div>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <span style="color: #95a5a6; font-size: 0.9rem;">No items</span>
                                    }
                                </td>

                                <td class="price-cell">@order.Subtotal.ToString("C")</td>
                                <td class="price-cell">@order.Tax.ToString("C")</td>
                                <td class="price-cell" style="color: var(--danger);">@order.Discount.ToString("C")</td>
                                <td class="total-cell">@order.Total.ToString("C")</td>
                                <td>
                                    <div class="action-buttons">
                                        <a asp-action="Update" asp-route-id="@order.Id" class="btn-action btn-primary">✏️ Edit</a>
                                        <a asp-action="Details" asp-route-id="@order.Id" class="btn-action btn-warning">Details</a>
                                        <button type="button" class="btn-action btn-delete"
                                                data-bs-toggle="modal"
                                                data-bs-target="#deleteModal"
                                                data-id="@order.Id"
                                                data-customer="@order.Customer?.UserName"
                                                data-total="@order.Total.ToString("C")">
                                            🗑️ Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-state-icon">📋</div>
                <h5>No Orders Found</h5>
                <p>You don't have any orders yet. Start by creating your first order!</p>
                <a asp-action="Create" class="btn-new-order">
                    <i class="bi bi-plus-circle"></i> Create Order
                </a>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">🗑️ Delete Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3" style="font-size: 1rem; color: var(--primary);">
                    Are you sure you want to delete this order? This action <strong>cannot be undone</strong>.
                </p>
                <ul class="order-details-list">
                    <li>
                        <strong>Order ID:</strong>
                        <span id="modalOrderId" style="font-weight: 700; color: var(--danger);"></span>
                    </li>
                    <li>
                        <strong>Customer:</strong>
                        <span id="modalCustomer" style="font-weight: 600;"></span>
                    </li>
                    <li>
                        <strong>Total Amount:</strong>
                        <span id="modalTotal" style="color: var(--success); font-weight: 700; font-size: 1.1rem;"></span>
                    </li>
                </ul>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post" asp-action="Delete">
                    <input type="hidden" name="id" id="deleteOrderId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete Order</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleItems(event, orderId) {
            event.preventDefault();
            const itemsDiv = document.getElementById('items-' + orderId);
            itemsDiv.classList.toggle('show');
        }

        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const orderId = button.getAttribute('data-id');
            const customer = button.getAttribute('data-customer');
            const total = button.getAttribute('data-total');

            document.getElementById('modalOrderId').textContent = '#' + orderId;
            document.getElementById('modalCustomer').textContent = customer || 'N/A';
            document.getElementById('modalTotal').textContent = total;
            document.getElementById('deleteOrderId').value = orderId;
        });
    </script>
}