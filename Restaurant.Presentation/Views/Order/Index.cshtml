@using Restaurant.Models
@model List<Order>

@{
    ViewData["Title"] = "Orders Management";
}

<style>
    /* Header Section */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding: 2rem 0;
    }

        .page-header h1 {
            color: #2c3e50;
            font-weight: 700;
            font-size: 2.2rem;
            margin: 0;
        }

    /* New Order Button */
    .btn-new-order {
        background: linear-gradient(135deg, #27ae60 0%, #229954 100%);
        color: white;
        border: none;
        padding: 0.85rem 2rem;
        border-radius: 8px;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

        .btn-new-order:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(39, 174, 96, 0.3);
            background: linear-gradient(135deg, #229954 0%, #1e8449 100%);
            color: white;
        }

    /* Table Container */
    .table-container {
        background: linear-gradient(135deg, #f5f7fa 0%, #e8ecf1 100%);
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
        overflow-x: auto;
    }

    /* Table Styling */
    .table {
        margin-bottom: 0;
        border-collapse: collapse;
        background: white;
        border-radius: 10px;
        overflow: hidden;
    }

        .table thead {
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
            color: white;
        }

            .table thead th {
                border: none;
                padding: 1.2rem;
                font-weight: 700;
                font-size: 0.95rem;
                text-align: center;
                vertical-align: middle;
            }

        .table tbody tr {
            border-bottom: 2px solid #ecf0f1;
            transition: all 0.3s ease;
        }

            .table tbody tr:hover {
                background: linear-gradient(90deg, #fef5f5 0%, #fff8f8 100%);
                box-shadow: 0 4px 12px rgba(231, 76, 60, 0.1);
            }

        .table tbody td {
            padding: 1.2rem;
            vertical-align: middle;
            font-size: 0.9rem;
            color: #2c3e50;
            text-align: center;
        }

    /* Order ID */
    .order-id {
        font-weight: 700;
        color: #e74c3c;
    }

    /* Customer Name */
    .customer-name {
        font-weight: 600;
        color: #2c3e50;
    }

    /* Type Badge */
    .type-badge {
        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        color: white;
        padding: 0.4rem 0.8rem;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 600;
        display: inline-block;
    }

    /* Status Badges */
    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 600;
        color: white;
        display: inline-block;
    }

    .status-pending {
        background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);
    }

    .status-preparing {
        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
    }

    .status-ready {
        background: linear-gradient(135deg, #9b59b6 0%, #8e44ad 100%);
    }

    .status-delivered {
        background: linear-gradient(135deg, #27ae60 0%, #229954 100%);
    }

    .status-cancelled {
        background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
    }

    /* Price Highlight */
    .price-cell {
        font-weight: 600;
        color: #2c3e50;
    }

    .total-cell {
        font-size: 1.1rem;
        font-weight: 700;
        color: #27ae60;
        background: linear-gradient(90deg, rgba(39, 174, 96, 0.1) 0%, transparent 100%);
        padding: 1.2rem !important;
        border-radius: 6px;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn-update {
        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        color: white;
        border: none;
        padding: 0.6rem 1rem;
        border-radius: 6px;
        font-weight: 600;
        font-size: 0.8rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.3rem;
    }

        .btn-update:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
            background: linear-gradient(135deg, #2980b9 0%, #1f618d 100%);
        }

    .btn-delete {
        background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
        color: white;
        border: none;
        padding: 0.6rem 1rem;
        border-radius: 6px;
        font-weight: 600;
        font-size: 0.8rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.3rem;
    }

        .btn-delete:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(231, 76, 60, 0.3);
            background: linear-gradient(135deg, #c0392b 0%, #a93226 100%);
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 3rem;
        color: #7f8c8d;
    }

        .empty-state h5 {
            color: #2c3e50;
            font-size: 1.3rem;
            margin-bottom: 1rem;
        }

    /* Modal */
    .modal-header {
        background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
        color: white;
        border: none;
    }

        .modal-header .btn-close {
            filter: brightness(0) invert(1);
        }

    .modal-body {
        padding: 2rem;
    }

    .modal-footer {
        border-top: 1px solid #ecf0f1;
        padding: 1.5rem;
    }

        .modal-footer .btn {
            border-radius: 6px;
            font-weight: 600;
        }

        .modal-footer .btn-secondary {
            background: #95a5a6;
            border: none;
            color: white;
        }

            .modal-footer .btn-secondary:hover {
                background: #7f8c8d;
            }

        .modal-footer .btn-danger {
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
            border: none;
            color: white;
        }

            .modal-footer .btn-danger:hover {
                background: linear-gradient(135deg, #c0392b 0%, #a93226 100%);
            }

    .order-details-list {
        background: linear-gradient(135deg, #f5f7fa 0%, #e8ecf1 100%);
        border-radius: 8px;
        padding: 1rem;
    }

        .order-details-list li {
            border: none;
            background: white;
            margin-bottom: 0.5rem;
            border-radius: 6px;
        }

            .order-details-list li:last-child {
                margin-bottom: 0;
            }

    /* Responsive */
    media (max-width: 1024px) {
        .page-header

    {
        flex-direction: column;
        gap: 1rem;
        align-items: flex-start;
    }

    .btn-new-order {
        width: 100%;
        justify-content: center;
    }

    .action-buttons {
        flex-direction: column;
    }

    .btn-update,
    .btn-delete {
        width: 100%;
        justify-content: center;
    }

    .table thead th {
        padding: 0.8rem;
        font-size: 0.8rem;
    }

    .table tbody td {
        padding: 0.8rem;
        font-size: 0.8rem;
    }

    }

    keyframes slideDown {
        from

    {
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .table-container {
        animation: slideDown 0.6s ease;
    }
</style>

<div class="page-header">
    <h1>Orders Management</h1>
    <a asp-action="Create" class="btn-new-order">Create New Order</a>
</div>

<div class="table-container">
    @if (Model != null && Model.Any())
    {
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Order ID</th>
                    <th>Customer</th>
                    <th>Type</th>
                    <th>Status</th>
                    <th>Date</th>
                    <th>Subtotal</th>
                    <th>Tax</th>
                    <th>Discount</th>
                    <th>Total</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model)
                {
                    <tr>
                        <td>
                            <span class="order-id">#@order.Id</span>
                        </td>
                        <td>
                            <span class="customer-name">@(order.Customer?.UserName ?? "N/A")</span>
                        </td>
                        <td>
                            <span class="type-badge">@order.Type</span>
                        </td>
                        <td>
                            @{
                                string statusClass = order.Status switch
                                {
                                    Restaurant.Models.OrderStatus.Pending => "status-pending",
                                    Restaurant.Models.OrderStatus.Preparing => "status-preparing",
                                    Restaurant.Models.OrderStatus.Ready => "status-ready",
                                    Restaurant.Models.OrderStatus.Delivered => "status-delivered",
                                    Restaurant.Models.OrderStatus.Cancelled => "status-cancelled",
                                    _ => "status-pending"
                                };
                            }
                            <span class="status-badge @statusClass">@order.Status</span>
                        </td>
                        <td>@order.LastStatusChange?.ToString("dd/MM/yyyy HH:mm")</td>
                        <td class="price-cell">@order.Subtotal.ToString("C")</td>
                        <td class="price-cell">@order.Tax.ToString("C")</td>
                        <td class="price-cell">@order.Discount.ToString("C")</td>
                        <td class="total-cell">@order.Total.ToString("C")</td>
                        <td>
                            <div class="action-buttons">
                                <a asp-action="Update" asp-route-id="@order.Id" class="btn-update">Update</a>
                                <button type="button" class="btn-delete"
                                        data-bs-toggle="modal"
                                        data-bs-target="#deleteModal"
                                        data-id="@order.Id"
                                        data-customer="@order.Customer?.UserName"
                                        data-total="@order.Total.ToString("C")">
                                    Delete
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="empty-state">
            <h5>No Orders Found</h5>
            <p>Start by creating your first order</p>
            <a asp-action="Create" class="btn-new-order">Create Order</a>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Are you sure you want to delete this order? This action cannot be undone.</p>
                <ul class="order-details-list list-group">
                    <li class="list-group-item">
                        <strong>Order ID:</strong> <span id="modalOrderId"></span>
                    </li>
                    <li class="list-group-item">
                        <strong>Customer:</strong> <span id="modalCustomer"></span>
                    </li>
                    <li class="list-group-item">
                        <strong>Total Amount:</strong> <span id="modalTotal" style="color: #27ae60; font-weight: 700;"></span>
                    </li>
                </ul>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post" asp-action="Delete">
                    <input type="hidden" name="id" id="deleteOrderId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete Order</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const orderId = button.getAttribute('data-id');
            const customer = button.getAttribute('data-customer');
            const total = button.getAttribute('data-total');

            document.getElementById('modalOrderId').textContent = '#' + orderId;
            document.getElementById('modalCustomer').textContent = customer || 'N/A';
            document.getElementById('modalTotal').textContent = total;
            document.getElementById('deleteOrderId').value = orderId;
        });
    </script>
}